name: Manage Push Subscriptions

on:
  repository_dispatch:
    types: [save_push_subscription, remove_push_subscription]

jobs:
  manage-subscription:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Process subscription data
        id: process
        run: |
          # Get the payload from the dispatch event
          echo "Event type: ${{ github.event.action }}"
          echo "Client payload received for processing"

          # Extract subscription data
          SUBSCRIPTION_ID="${{ github.event.client_payload.subscription.subscriptionId }}"
          ACTION="${{ github.event.client_payload.action }}"
          TIMESTAMP="${{ github.event.client_payload.subscription.timestamp }}"

          echo "subscription_id=${SUBSCRIPTION_ID}" >> $GITHUB_OUTPUT
          echo "action=${ACTION}" >> $GITHUB_OUTPUT
          echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT

      - name: Save subscription to secrets
        if: steps.process.outputs.action == 'save'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          SUBSCRIPTION_DATA: ${{ toJSON(github.event.client_payload.subscription) }}
        run: |
          echo "${GITHUB_TOKEN}" | gh auth login --with-token
          SUBSCRIPTION_ID="${{ steps.process.outputs.subscription_id }}"
          SECRET_NAME="PUSH_SUBSCRIPTION_${SUBSCRIPTION_ID}"

          # Install jq for JSON processing
          sudo apt-get update && sudo apt-get install -y jq

          # Create the secret using GitHub CLI
          echo "$SUBSCRIPTION_DATA" | gh secret set "$SECRET_NAME" --body -

          echo "‚úÖ Subscription $SUBSCRIPTION_ID saved to GitHub Secrets"

      - name: Remove subscription from secrets
        if: steps.process.outputs.action == 'remove'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "${GITHUB_TOKEN}" | gh auth login --with-token
          SUBSCRIPTION_ID="${{ steps.process.outputs.subscription_id }}"
          SECRET_NAME="PUSH_SUBSCRIPTION_${SUBSCRIPTION_ID}"

          echo "Removing subscription data for ID: $SUBSCRIPTION_ID"

          # Delete the secret using GitHub CLI
          gh secret delete "$SECRET_NAME"

          echo "‚úÖ Subscription $SUBSCRIPTION_ID removed from GitHub Secrets"

      - name: Log operation
        run: |
          echo "üìù Push subscription operation completed:"
          echo "   Action: ${{ steps.process.outputs.action }}"
          echo "   Subscription ID: ${{ steps.process.outputs.subscription_id }}"
          echo "   Timestamp: ${{ steps.process.outputs.timestamp }}"
          echo "   Repository: ${{ github.repository }}"
